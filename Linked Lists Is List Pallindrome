// Singly-linked lists are already defined with this interface:
// template<typename T>
// struct ListNode {
//   ListNode(const T &v) : value(v), next(nullptr) {}
//   T value;
//   ListNode *next;
// };
//
ListNode<int> *temp;
bool isListPalindrome(ListNode<int> * l) 
{
    if (!temp) 
        temp = l;
    if (!l) 
        return true;
    bool ret = true;
    ret &= isListPalindrome(l->next);
    if (l->value != temp->value) 
        return false;
    temp = temp->next;
    return ret;
}
