// Singly-linked lists are already defined with this interface:
// template<typename T>
// struct ListNode {
//   ListNode(const T &v) : value(v), next(nullptr) {}
//   T value;
//   ListNode *next;
// };
//
ListNode<int> * mergeTwoLinkedLists(ListNode<int> * l1, ListNode<int> * l2) 
{
    ListNode<int> * temp = nullptr, *current;
    while(l1 || l2)
    {
        if(l1 && l2)
        {
            if(l1->value <= l2->value)
            {
                ListNode<int> * node = new ListNode(l1->value);
                if(!temp)
                    temp = current = node;
                else
                    current->next=node, current =current->next;
                
                l1 = l1->next;
            }
            else
            {
                ListNode<int> * node = new ListNode(l2->value);
                if(!temp)
                    temp = current = node;
                else
                    current->next=node, current =current->next;
                
                l2 = l2->next;
            }
        }
        else if(l1)
        {
            ListNode<int> * node = new ListNode(l1->value);
            if(!temp)
                temp = current = node;
            else
                current->next=node, current =current->next;
            
            l1 = l1->next;
        }
        else
        {
            ListNode<int> * node = new ListNode(l2->value);
            if(!temp)
                temp = current = node;
            else
                current->next=node, current =current->next;
            
            l2 = l2->next;
        }
    }  
    return temp; 
}
